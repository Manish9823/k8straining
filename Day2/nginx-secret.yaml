# Create test3 namespace (Dont need to create namespace, it will create in the pod spec, but goot to be explicit)
apiVersion: v1
kind: Namespace
metadata:
  name: test20
---
# Create Secret
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: nginx-secret
  namespace: test20
data:
  somedata: 'c29tZXZhbHVl' # base64 encoded value for somevalue
  index.html: 'PGh0bWw+CiAgICA8aGVhZD4KICAgICAgICA8dGl0bGU+SGVsbG8gV29ybGQgZnJvbSBpbmRleCBmaWxlIGluIHNlY3JldCE8L3RpdGxlPgogICAgPC9oZWFkPgogICAgPGJvZHk+CiAgICAgICAgPGgxPkhlbGxvIFdvcmxkIGZyb20gaW5kZXggZmlsZSBpbiBzZWNyZXQhPC9oMT4KICAgIDwvYm9keT4KICAgIDwvaHRtbD4='
---
# Create nginx deployment in test4 namespace
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: test20
  labels:
    app: nginx
spec:
  replicas: 3
  strategy:
    type: RollingUpdate # Update pods one by one, no downtime deployment
    # type: Recreate # Terminate all pods before creating new ones
    # Other deployment types like canary supported via ingress routing
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.25.1 # Image versions 1.25.1, 1.25.5, 1.26.2
        env:
        - name: SOME_DATA
          valueFrom:
            secretKeyRef:
              name: nginx-secret
              key: somedata
        ports:
        - containerPort: 80
        livenessProbe:
          httpGet: 
            path: /index.html
            port: 80
            httpHeaders:
            - name: User-Agent
              value: k8s-probe-liveness
        startupProbe:
          httpGet: 
            path: /index.html
            port: 80
            httpHeaders:
            - name: User-Agent
              value: k8s-probe-startup
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        volumeMounts:
        - name: nginx-secret
          mountPath: /usr/share/nginx/html
          readOnly: true
      volumes:
      - name: nginx-secret
        secret:
          secretName: nginx-secret